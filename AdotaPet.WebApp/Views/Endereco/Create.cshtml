@model AdotaPet.WebApp.Models.Entities.Endereco

@{
    ViewBag.Title = "Endereço";
}

<h2>Cadastro de endereço</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2 " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })     
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Cadastrar" class="btn btn-success" />
        </div>
    </div>
</div>

    <script>
        window.onload = function () {
            $("#Cep").select();
            $("#Cep").focusout(function () {
                sugerirEndereco();
            });
        }
        function sugerirEndereco() {
            $("input:text,form").attr("autocomplete", "off");
            $("#Complemento").val(".");
            var cep = $("#Cep").val();
            $.ajax({
                type: "POST",
                url: "\ObterCep",
                data: "{Cep:'" + $("#Cep").val() + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (resposta) {
                    console.log(resposta);
                    if (resposta.codigo == 500) {
                        alert(resposta.mensagem);
                        return false;
                    }

                    if ($("#UF").val() != "") {
                        $("#UF").val();
                    } else {
                        $("#UF").val(resposta.uf);
                    }

                    if ($("#Bairro").val() != "") {
                        $("#Bairro").val();
                    } else {
                        $("#Bairro").val(resposta.bairro);
                    }

                    if ($("#Logradouro").val() != "") {
                        $("#Logradouro").val();
                    } else {
                        $("#Logradouro").val(resposta.endereco);
                    }
                        
                    if ($("#Cidade").val() != "") {
                        $("#Cidade").val();
                    } else {
                        $("#Cidade").val(resposta.cidade);
                    }

                    if ($("#Complemento").val() != "") {
                        $("#Complemento").val();
                    } else {
                        $("#Complemento").val(resposta.complemento2);
                    }
                    
                },
                error: function (obj) {
                    alert("Erro inesperado entre em contato com o suporte tecnico.");
                    
                }
            });
        }
        
    </script>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



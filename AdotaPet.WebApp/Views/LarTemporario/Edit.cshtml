@model AdotaPet.WebApp.Models.Entities.LarTemporario

@{
    ViewBag.Title = "Editar lar temporário";
}

<h2>Editar lar temporário</h2>
<div>
    @Html.ActionLink("Listagem", "Index", "Index", new { @class = "btn btn-primary" })
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group col-md-6">
        <label class="control-label col-md-2">Responsável</label>
        <div class="col-md-10">
            <select class="custom-select form-control col-md-10" id="pessoa_Id">
                <option selected value="0">Selecione</option>
            </select>
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        <label class="control-label col-md-2">Animal</label>
        <div class="col-md-10">
            <select class="custom-select form-control col-md-10" id="animal_Id">
                <option selected value="0">Selecione</option>
            </select>
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6 ">
        <input type="hidden" id="Ong_Id" value="1" />
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Cadastrar" id="cadastrar" class="btn btn-success" />
        </div>
    </div>
</div>
}
<script>
    window.onload = function () {
        popularAnimal();
        popularPessoa();
        preencherCampos();
        $("#Cep").prop("disabled", true);
        $("#Numero").prop("disabled", true);
        $("#Bairro").prop("disabled", true);
        $("#Cidade").prop("disabled", true);
        $("#Complemento").prop("disabled", true);
        $("#Logradouro").prop("disabled", true);
        $("#UF").prop("disabled", true);
        $("#cadastrar").click(function () {
            salvarAlteracao();
        });
    }

    function popularAnimal() {
        $.ajax({
            type: "POST",
            url: "/LarTemporario/ObterAnimais",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (resposta) {
                popularComboAnimal(resposta);
            },
            error: function () {
                alert("Não foi possivel listar os animais, por favor entrar em contato com o suporte técnico");
            }
        });
    }
    function popularComboAnimal(animais) {
        var comboAnimal = $("#animal_Id");
        $.each(animais, function (indice, animal) {
            comboAnimal.append($("<option value=" + this.Id + ">").text((this.Codigo + ' - ' + this.Nome)));
        });
    }

    function popularPessoa() {
        $.ajax({
            type: "POST",
            url: "/LarTemporario/ObterPessoas",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (resposta) {
                popularComboPessoa(resposta);
            },
            error: function () {
                alert("Não foi possivel listar os responsáveis, por favor entrar em contato com o suporte técnico");
            }
        });
    }
    function popularComboPessoa(Pessoas) {
        var comboPessoa = $("#pessoa_Id");
        $.each(Pessoas, function (indice, pessoa) {
            comboPessoa.append($("<option value=" + this.Id + ">").text((this.Codigo + ' - ' + this.Nome)));
        });
    }

    function salvarAlteracao() {
        var lar_temporario = {
            "Numero": $("#Numero").val(),
            "Pessoa_Id": $("#pessoa_Id").val(),
            "Animal_Id": $("#animal_Id").val(),
            "Observacao": $("#Observacao").val(),
            "Bairro": $("#Bairro").val(),
            "Cep": $("#Cep").val(),
            "Cidade": $("#Cidade").val(),
            "Complemento": $("#Complemento").val(),
            "Logradouro": $("#Logradouro").val(),
            "UF": $("#UF").val(),
            "Ong_Id": $("#Ong_Id").val(),
            "id": $("#Id").val()
        };
        $.ajax({
            type: "POST",
            url: "/LarTemporario/Salvar",
            data: JSON.stringify(lar_temporario),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (resposta) {
                $("#Numero").val("");
                $("#pessoa_Id").val("");
                $("#animal_Id").val("");
                $("#Observacao").val("");
                $("#Bairro").val("");
                $("#Cep").val("");
                $("#Cidade").val("");
                $("#Complemento").val("");
                $("#Logradouro").val("");
                $("#UF").val("");
                alert("Registro salvo com sucesso!");
            },
            error: function () {
                alert("Não foi possivel salvar o cadastro, por favor entrar em contato com o suporte técnico");
            }
        });
    }

    function preencherCampos() {
        $.ajax({
            type: "POST",
            url: "/LarTemporario/Editar",
            data: "{parametro:" + $("#Id").val() + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (resposta) {
                $("#Numero").val(resposta.Numero);
                $("#pessoa_Id").val(resposta.Pessoa_Id.Id);
                $("#animal_Id").val(resposta.Animal_Id.Id);
                $("#Observacao").val(resposta.Observacao);
                $("#Bairro").val(resposta.Bairro);
                $("#Cep").val(resposta.Cep);
                $("#Cidade").val(resposta.Cidade);
                $("#Complemento").val(resposta.Complemento);
                $("#Logradouro").val(resposta.Logradouro);
                $("#UF").val(resposta.UF);
                $("#Ong_Id").val(resposta.Ong_Id.Id);
            },
            error: function () {
                alert("Não foi possivel retornar os campos para editar, favor entrar em contato com o suporte técnico");
            }
        });
    }


</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


